#include<iostream>
#include<vector>
using namespace std;

bool isSafe(vector<vector<int>> &maze,int x,int y,int n){
    if(x<n && y<n && maze[x][y]==1) true;
}

bool lion(vector<vector<int>> &maze,int x,int y,int n,vector<vector<int>> &solarr){
    if((x==(n-1))&&(y==(n-1))){
        solarr[x][y]=1;
        return true;
    }

    if(isSafe(maze,x,y,n)){
        solarr[x][y]=1;

        if(lion(maze,x+1,y,n,solarr)) return true;

        if(lion(maze,x,y+1,n,solarr)) return true;

        solarr[x][y]=0;
        return false;
    }
    return false;
}

int main() {
    int n = 5;
    vector<vector<int>> maze = {
        {1, 0, 0, 0, 0},
        {1, 1, 1, 1, 0},
        {0, 0, 0, 1, 0},
        {1, 1, 1, 1, 1},
        {0, 0, 0, 0, 1}
    };

    vector<vector<int>> solarr(n, vector<int>(n, 0));

    if (lion(maze, 0, 0, n, solarr)) {
        cout << "Lion's Path:\n";
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                cout << solarr[i][j] << " ";
            }
            cout << endl;
        }
    } else {
        cout << "No path exists!";
    }

    return 0;
}
